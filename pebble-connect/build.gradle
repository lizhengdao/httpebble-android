apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 11
        versionName "2.0.3"
    }

    signingConfigs {
        release {
            storeFile System.properties['KEYSTORE_PATH'] ? file(System.properties['KEYSTORE_PATH']) : null
            storePassword "PLACEHOLDER"
            keyAlias System.properties['KEYSTORE_EMAIL']
            keyPassword "PLACEHOLDER"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile 'com.google.android.gms:play-services:4.3.23'
}

// borrowed from https://www.timroes.de/2014/01/19/using-password-prompts-with-gradle-build-files/
// and https://www.timroes.de/2013/09/22/handling-signing-configs-with-gradle/
gradle.taskGraph.whenReady { taskGraph ->
    // Only execute when we are trying to assemble a release build
    if(taskGraph.hasTask(':pebble-connect:assembleRelease') || taskGraph.hasTask(':pebble-connect:installRelease')) {
        def password = System.console().readPassword("\nPlease enter key passphrase: ")

        if(password.size() <= 0) {
            throw new InvalidUserDataException("You must enter a password to proceed.")
        }

        // Must create String because System.readPassword() returns char[]
        // (and assigning that below fails silently)
        password = new String(password)

        android.signingConfigs.release.storePassword = password
        android.signingConfigs.release.keyPassword = password
    }
}
